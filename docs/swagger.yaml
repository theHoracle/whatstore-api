definitions:
  models.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      store_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Service:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      rate:
        type: number
      store_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Store:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      services:
        items:
          $ref: '#/definitions/models.Service'
        type: array
      updated_at:
        type: string
      vendor_id:
        type: integer
    type: object
  models.User:
    properties:
      clerk_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user_details:
        $ref: '#/definitions/models.UserDetails'
      username:
        type: string
      vendor:
        $ref: '#/definitions/models.Vendor'
    type: object
  models.UserDetails:
    properties:
      created_at:
        type: string
      id:
        type: integer
      preferred_payment:
        type: string
      shipping_address:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Vendor:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      stores:
        items:
          $ref: '#/definitions/models.Store'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /stores/{id}:
    delete:
      description: Delete a store and all associated data
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a store
      tags:
      - stores
    get:
      description: Get detailed information about a store including its products and
        services
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Store'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get store details
      tags:
      - stores
    put:
      consumes:
      - application/json
      description: Update an existing store's information
      parameters:
      - description: Store ID
        in: path
        name: id
        required: true
        type: string
      - description: Store update information
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Store'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "403":
          description: Forbidden
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update store details
      tags:
      - stores
  /vendors:
    get:
      description: Get a list of all vendors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Vendor'
            type: array
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: List all vendors
      tags:
      - vendors
    post:
      consumes:
      - application/json
      description: Create a new vendor account with an initial store
      parameters:
      - description: Store creation information
        in: body
        name: input
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Vendor'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new vendor account
      tags:
      - vendors
  /vendors/{id}:
    delete:
      description: Delete a vendor and all associated stores
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a vendor
      tags:
      - vendors
    get:
      description: Get detailed information about a vendor
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vendor'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get vendor details
      tags:
      - vendors
    put:
      consumes:
      - application/json
      description: Update an existing vendor's information
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vendor'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update vendor details
      tags:
      - vendors
  /vendors/{vendorId}/stores:
    get:
      description: Get a list of all stores belonging to a specific vendor
      parameters:
      - description: Vendor ID
        in: path
        name: vendorId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Store'
            type: array
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: List all stores for a vendor
      tags:
      - stores
swagger: "2.0"
